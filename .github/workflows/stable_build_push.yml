---
name: Stable Build and Push

on: 
  workflow_dispatch:
    inputs:
      platforms:
        description: 'Set the platforms to build [ linux/amd64, linux/arm64 or linux/arm/v7 ]'
        required: false
        default: 'linux/amd64,linux/arm64,linux/arm/v7'
      pushit:
        description: 'Should push?'
        required: false
        default: 'false'

jobs:
  dispatch-stable-build:
    runs-on: ubuntu-latest
    env:
      # renovate: datasource=github-tags depName=etesync/etesync-web
      CLIENT_VERSION: v0.6.1
      # renovate: datasource=github-tags depName=etesync/etesync-notes
      NOTES_VERSION: v1.7.0
    steps:
      - name: Checkout Dockerfiles and Context
        uses: actions/checkout@v2.4.0
      
      - id: gen-tag
        shell: bash
        run: |
          TAG="w${CLIENT_VERSION#v}n${NOTES_VERSION#v}"
          echo ::set-output name=tag::${TAG}

      - id: docker_metadata
        uses: docker/metadata-action@v3.6.2
        with:
          labels: |
            maintainer=victor-rds
            org.opencontainers.image.authors='Victor R. Santos <victor-rds@users.noreply.github.com>'
          images: |
            victorrds/etesync-clients
          flavor: |
            latest=true
          tags: |
            type=raw,value=${{ steps.gen-tag.outputs.tag }}

      - name: Set up QEMU
        if: contains(github.event.inputs.platforms, 'linux/arm')
        uses: docker/setup-qemu-action@v1.2.0

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1.6.0

      - name: Login to DockerHub
        if: contains(github.event.inputs.pushit, 'true')
        uses: docker/login-action@v1.10.0
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Docker Build and Push
        id: docker_build_push
        uses: docker/build-push-action@v2.7.0
        with:
          builder: ${{ steps.buildx.outputs.name }}
          platforms: ${{ github.event.inputs.platforms }}
          context: .
          file: ./Dockerfile
          build-args: |
            CLIENT_VERSION=${{ env.CLIENT_VERSION }}
            NOTES_VERSION=${{ env.NOTES_VERSION }}
          tags: ${{ steps.docker_metadata.outputs.tags }}
          labels: ${{ steps.docker_metadata.outputs.labels }}
          push: ${{ contains(github.event.inputs.pushit, 'true') }}